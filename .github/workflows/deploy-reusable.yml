name: 'Deploy: Reusable'

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        type: string
        required: true
        description: Github environment to use
      BUCKET_DOMAIN_NAME:
        type: string
        required: true
        description: Domain name used for bucket name
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      AWS_REGION:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      BUCKET_DOMAIN_NAME: ${{ inputs.BUCKET_DOMAIN_NAME }}
      PROJECT_NAME: calc
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Copy Environment Config Files
        working-directory: ./infrastructure
        run: cp -r ./${{ inputs.ENVIRONMENT }}/* ./

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-deployer
          role-session-name: GitHubActions-github-deployer
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build App
        run: yarn build:${{ inputs.ENVIRONMENT }}

      - name: Export App
        run: yarn export

      - name: inject sentry test ids
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        run: yarn sentry sourcemaps inject out

      - name: upload sourcemaps to sentry
        if: ${{ inputs.ENVIRONMENT == 'production' }}
        run: yarn sentry sourcemaps inject out

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6
          terraform_wrapper: false

      - name: Terraform Initialization
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infrastructure
        run: terraform apply -auto-approve

      - name: Deploy
        uses: reggionick/s3-deploy@v3
        with:
          folder: out
          bucket: ${{ inputs.BUCKET_DOMAIN_NAME }}
          bucket-region: ${{ secrets.AWS_REGION }}
          delete-removed: true
          cache: 'max-age=31536000'
          private: false
          filesToInclude: '.*/*,*/*,**'
